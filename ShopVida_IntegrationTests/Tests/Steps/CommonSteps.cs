namespace FrameworkTests.Tests.Steps
{
    using FrameworkTests.Pages;
    using FrameworkTests.Utilities.Enums;
    using FrameworkTests.Utilities.Helpers;
    using FrameworkTests.Utilities.Objects;
    using OpenQA.Selenium.Remote;
    using System.Drawing;
    using TechTalk.SpecFlow;

    [Binding]
    public class CommonSteps : SeleniumReporter
    {
        public CommonSteps(RemoteWebDriver driver, AppSettings appSettings)
            : base(appSettings)
        {
            Driver = driver;
        }

        [When(@"I input specific login credentials ""(.*)"" and ""(.*)""")]
        public void WhenIInputSpecificLoginCredentialsAnd(string email, string password)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.SetUserLoginCredentials(email, password);
        }

        [Then(@"Verify page header should be")]
        public void ThenVerifySideBarHeaderShouldBe(Table table)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.VerifyHeaderPageTitle(table);
        }

        [When(@"I Click (Login|SignOut|Continue to shipping|Continue to payment|Return to information|Return to shipping|Save) Button")]
        public void WhenIClickButton(string action)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            switch (action)
            {
                case "Login":
                    commonPage.DoUserLogin();
                    break;

                case "SignOut":
                    commonPage.DoUserSignOut();
                    break;

                case "Continue to shipping":
                case "Continue to payment":
                    commonPage.ClickContinueShipping(action);
                    break;

                case "Return to information":
                case "Return to shipping":
                    commonPage.ClickReturnLinkBtn(action);
                    break;

                case "Save":
                    commonPage.ClickAccountSaveBtn();
                    break;
            }
        }

        [Then(@"I should be navigated to ""(.*)"" page")]
        public void WhenIShouldBeNavigatedToPage(Page pageName)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.VerifyPageLink(pageName);
        }

        [Given(@"I should already logged in with credentials")]
        [When(@"I should already logged in with credentials")]
        public void GivenIShouldAlreadyLoginIntoTheApplication(Table table)
        {
            Given(@"I launch the application");
            Then(@"I should be able to see login popup/dialog box generated by URL");
            Then(@"I verify the welcome header title text");
            When(@"I entered valid login credentials", table);
            When(@"I Click Log in Button", table);
            Then(@"Verify page header should be", table);
        }

        [When(@"I select ""(.*)"" menu with ""(.*)"" submenu")]
        public void WhenISelectMenuWithSubmenu(string menu, string submenu)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.SelectMenu(menu, submenu);
        }

        [Then(@"Verify ""(.*)"" button should be disabled")]
        public void ThenVerifyButtonShouldBeDisabled(string buttonName)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.IsButtonDisabled(buttonName);
        }

        [Then(@"Verify ""(.*)"" button should be enabled")]
        public void ThenVerifyButtonShouldBeEnabled(string buttonName)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.IsButtonEnabled(buttonName);
        }

        [Then(@"Verify ""(.*)"" button should be displayed")]
        public void ThenVerifyButtonShouldBeDisplayed(string buttonName)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.IsButtonDisplayed(buttonName);
        }

        [When(@"I click ""(.*)"" and ""(.*)""")]
        public void WhenIClickAnd(string menu, string submenu)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.SelectMenu(menu, submenu);
        }

        [Then(@"I navigated on page ""(.*)""")]
        public void ThenINavigatedOnPage(Page pageName)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.VerifyPageLink(pageName);
        }

        [Then(@"I am on the page ""(.*)""")]
        public void ThenIAmOnThePage(Page pageName)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.VerifyPageLinkOtherWindow(pageName);
        }

        [Then(@"Verify dialogue box page heading name should be ""(.*)""")]
        public void ThenVerifyDialogueBoxPageHeadingNameShouldBe(string headingName)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.VerifyDialogueBoxpageHeader(headingName);
        }

        [Then(@"Verify page header name should be ""(.*)""")]
        public void ThenVerifyPageHeaderNameShouldBe(string headingName)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.VerifyDialogueBoxpageHeader(headingName);
        }

        [Then(@"Verify page heading name should be ""(.*)""")]
        public void ThenVerifyPageHeadingNameShouldBe(string headingName)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.VerifypageHeader(headingName);
        }

        [When(@"I Click on ""(.*)"" Button")]
        public void WhenIClickOnButton(string buttonName)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.CommonButtonClickAction(buttonName);
        }

        [When(@"I am on the page ""(.*)""")]
        public void WhenIAmOnThePage(Page pageName)
        {
            CommonPage commonPage = new CommonPage(Driver, _appSettings);
            commonPage.IsUserNavigated(pageName);
        }

        [When(@"User input specific dimensions for ""(.*)""")]
        public void WhenUserInputSpecificDimensionsFor(MobileView dimensions)
        {
            var (Width, Height) = CommonUtils.ReturnMobileViewDimensions(dimensions);
            Driver.Manage().Window.Size = new Size(Width, Height);
        }
    }
}